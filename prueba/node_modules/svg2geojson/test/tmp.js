const measurablePath = require('point-at-length');
const paths = {
  '5' : 'M15,25 c 5.5191502449,0 10,-4.4808497551 10,-10',
  '8' : 'M40,25 c 5.5191502449,0 10,-4.4808497551 10,-10 s-4.4808497551,-10 -10,-10',
  '9' : 'M65,25 c 5.5191502449,0 10,-4.4808497551 10,-10 s-4.4808497551,-10 -10,-10 s-10,4.4808497551 -10,10',
  '13' : 'M90,25 c 5.5191502449,0 10,-4.4808497551 10,-10 s-4.4808497551,-10 -10,-10 s-10,4.4808497551 -10,10 s4.4808497551,10  10,10 z'
};

console.log('<?xml version="1.0" encoding="utf-8"?>');
console.log('<svg xmlns="http://www.w3.org/2000/svg" width="840px" height="480px" viewBox="0 0 105 60">');
console.log('<style>path, polyline { fill:none; stroke:black; stroke-width:0.5px }');
console.log('polyline { stroke:red }</style>');
for (const steps in paths) {
  const d = paths[steps],
        path = measurablePath(d),
        len = path.length(),
        pts = [];
  for (var i=0;i<=steps;++i) pts.push(...path.at(len*i/steps));
  console.log('<path d="'+d+'"/>');
  console.log('<polyline points="'+pts.map(n=>n.toFixed(1)).join()+'" transform="translate(0,25)"/>');
}
console.log('</svg>');